<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>

    <!--
        1。mybatis可以使用properties来引入外部properties配置文件
            resource。 引入类路径下的资源
            url。 引入网络路径或者磁盘路径下的资源
    -->
    <properties resource="mybatis/jdbc.properties"></properties>


    <!--
        settings 包含很多重要的设置项
            setting: 用来设置每一个设置项
                name：设置项名称
                value：设置项取值
    -->
    <settings>
        <setting name="mapUnderscoreToCamelCase" value="true"/>
    </settings>

    <!--typeAliases:别名处理器； 可以为我们的java类型起别名
        别名不区分大小写
    -->
    <typeAliases>
        <!--typeAlias: 为某个java类型起别名
                type: 指定要起别名的类型全类名；不指定alias默认别名就是类名小写；employee
                alias: 指定新的别名
        -->
        <typeAlias type="com.rm13.mybatis.entity.Employee" alias="emp" />

        <!--package:为某个包下的所有类批量起别名
                name：指定包名（为当前包以及下面的所有的后代包都每一个类都起一个默认别名（类名小写））
        -->
        <package name="com.rm13.mybatis.entity"/>

        <!-- 批量起别名的情况下， 使用@Alias注解为某个类类型指定新的别名-->

    </typeAliases>


    <!-- 数据库类型和java类型转换 -->
    <typeHandlers>

    </typeHandlers>


    <plugins>
        <plugin interceptor="com.rm13.mybatis.plugin.ParameterInterceptor">
            <property name="user" value="lovemyrm13"/>
            <property name="pass" value="lovemyrm14"/>
        </plugin>
        <plugin interceptor="com.rm13.mybatis.plugin.ResultSetInterceptor">
            <property name="rm13" value="rmm"/>
            <property name="rm14" value="rmm"/>
        </plugin>
    </plugins>

     <!--
        environments: 可以配置多种环境； default指定使用某种环境。可以达到快速切换环境。
            environment：配置一个具体的环境信息， 必须要有2个标签
                    transactionManager：事务管理器
                        type：事务管理器类型；JDBC（jdbc来控制事务）|MANAGED（J2EE服务器来控制事务）
                    dataSource：数据源；
                        type：UNPOOLED（UnpooledDataSourceFactory）
                            |POOLED（PooledDataSourceFactory）
                            |JNDI（JndiDataSourceFactory）
                            自定义数据源： 实现DataSourceFactory接口，type是全类名
     -->
    <environments default="mysql_dev">
        <!--mysql-->
        <environment id="mysql_dev">
            <transactionManager type="JDBC"/>
            <dataSource type="POOLED">
                <property name="driver" value="${mysql.driver}"/>
                <property name="url" value="${mysql.url}"/>
                <property name="username" value="${mysql.username}"/>
                <property name="password" value="${mysql.password}"/>
            </dataSource>
        </environment>
        <!--oracle-->
        <environment id="oracle_dev">
            <transactionManager type="JDBC"/>
            <dataSource type="POOLED">
                <property name="driver" value="${oracle.driver}"/>
                <property name="url" value="${oracle.url}"/>
                <property name="username" value="${oracle.username}"/>
                <property name="password" value="${oracle.password}"/>
            </dataSource>
        </environment>
    </environments>

    <!---databaseIdProvider： 支持多数据库厂商
        type="DB_VENDOR"
            作用就是得到数据库厂商的标识(驱动getDatabaseProductName())，mybatis就能根据数据库厂商标示来执行不同的sql
    -->
    <databaseIdProvider type="DB_VENDOR">
        <property name="SQL Server" value="sqlserver"/>
        <property name="DB2" value="db2"/>
        <property name="Oracle" value="oracle" />
        <property name="MySQL" value="mysql" />
    </databaseIdProvider>

    <!--mappers：将sql映射注册到全局配置中-->
    <mappers>

        <!--
            mapper:注册一个sql映射
                resource：引用（注册）类路径下的sql映射文件
                    com/rm13/mybatis/dao/EmployeeMapper.xml
                url：引用（注册）网络路径下/磁盘路径下的文件
                    file:///var/mappers/BlogMapper.xml
                class：引用（注册）接口
                    1：有sql映射文件，映射文件名必须和接口同名， 并且放在与接口同一目录下；
                    2：没有sql映射文件， 所有sql都是利用注解写在接口上
                    推荐：
                        比较重要的，复杂的Dao接口我们来写sql映射文件。
                        不重要，简单的Dao接口为了开发快速可以使用注解
        -->
        <!--<mapper resource="com/rm13/mybatis/dao/EmployeeMapper.xml"/> -->


        <!-- 批量注册-->
        <package name="com.rm13.mybatis.dao"/>

    </mappers>

</configuration>